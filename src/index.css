@import url("https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap");

html,
body {
  width: 100%;
  height: 100%;
}

:root {
  --primary-text-color: #0a0a0a;
  --secondary-text-color: #444;
  --background-color: #ffffff;
  --box-shadow-color: #eae9e9;
  --button-background-color: #e6e6e6;
  --box-border-color: #d1d1d1;
  --answer-border-color: #ced4da;
  --question-direction-background-color: #eeeeee;
  --table-border-color: #e2e8f0;
  --footer-btn-disabled-background-color: #e5e5e5;
  --footer-btn-disabled-text-color: #cfcfcf;
  --question-list-item-background-color: #a9c1f7;

  --blue-color-1: #1c76da;
  --blue-color-2: #2d69f0;
  --green-color-1: #1fbb58;
  --green-color-2: #28a745;
  --red-color-1: #dc3545;
  --yellow-color: #ffc107;

  --sidebar-width: min(380px, 100vw);
  --navbar-height: 60px;
  --footer-height: 56px;
  --test-container-width: 1200px;
}

* {
  padding: 0;
  margin: 0;
  box-sizing: border-box;
  font-family: Roboto, Arial, Helvetica, sans-serif;
  line-height: 1.5;
}

button {
  all: unset;
  cursor: pointer;
  text-align: center;
  justify-items: center;
}

[data-theme="dark"] {
  --primary-text-color: #e0e0e0;
  --secondary-text-color: #bdbdbd;
  --background-color: #1f1f1f;
  --box-shadow-color: #141414;
  --button-background-color: #2b2b2b;
  --box-border-color: #313131;
  --answer-border-color: #363641;
  --question-direction-background-color: #222222;
  --table-border-color: #252525;
  --footer-btn-disabled-background-color: #2e2e2e;
  --footer-btn-disabled-text-color: #4b4b4b;
  --question-list-item-background-color: #44567c;
}

.App,
.Navbar,
.Footer,
.Sidebar,
.Main .TestContainer {
  color: var(--primary-text-color);
  background-color: var(--background-color);
  transition: color 150ms ease, background-color 150ms ease;
}

.Navbar {
  position: fixed;
  display: flex;
  width: 100%;
  height: var(--navbar-height);
  align-items: center;
  padding: 16px 8px;
  box-shadow: 0 2px var(--box-shadow-color);
  z-index: 3;

  & .SubjectNameContainer {
    display: flex;
    width: 100%;
  }
}

.TestNavbarContainer {
  display: flex;
  margin-left: auto;
  margin-right: auto;
  width: var(--test-container-width);

  & .TestNavBarRightSide {
    margin-left: auto;
    display: flex;
  }

  & .BtnSubmitTest {
    font-size: 16px;
    font-weight: 400;
    text-transform: none;
    padding: 0px;
    width: 120px;
    height: 46px;
    color: #e0e0e0;
    background: var(--green-color-1);
    border-radius: 4px;
  }

  & .ScoreBoxBtn {
    text-transform: none;
    font-size: 14px;
    padding: 0 8px;
    min-width: 104px;
    height: 46px;
    background-color: var(--button-background-color);
    border-radius: 4px;
  }
}

.NavbarItem {
  display: flex;
  width: auto;
  align-items: center;
  justify-content: center;
  text-transform: uppercase;
  font-size: 18px;
  font-weight: 700;
  padding: 4px;
  text-wrap: balance;

  & * {
    color: var(--secondary-text-color);
  }
}

.BtnHamburger {
  margin-right: 10px;
}

.BtnHamburgerIcon {
  transition: transform 350ms ease;

  &.active {
    transform: rotate(90deg);
  }
}

.IconBtn {
  padding: 10px;
  width: 24px;
  height: 24px;
  display: flex;
  align-items: center;
  justify-content: center;
  background: var(--button-background-color);
  border-radius: 8px;
  transition: color 150ms ease, background-color 150ms ease;
}

.Footer {
  position: fixed;
  bottom: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  width: 100%;
  height: var(--footer-height);
  box-shadow: 0 -2px var(--box-shadow-color);
  z-index: 3;
  gap: 8px;
}

#QuestionListShowBtn {
  background-color: var(--blue-color-1);
  color: #e0e0e0;
  padding: 6px;
  border-radius: 20px;
  transition: color 150ms ease, background-color 150ms ease;
}

.QuestionListMenuContent {
  display: flex;
  flex-wrap: wrap;
  max-width: 556px;
  padding: 8px;
  gap: 6px;
}

.QuestionListMenuItem {
  font-size: 14px;
  background-color: var(--blue-color-1);
  color: #e0e0e0;
  width: 36px;
  height: 36px;
  border-radius: 20px;
  transition: color 150ms ease, background-color 150ms ease;
}

.QuestionListMenuItem.unanswer {
  background-color: var(--question-list-item-background-color);
}

.QuestionListMenuItem.correct {
  background-color: var(--green-color-2);
}

.QuestionListMenuItem.incorrect {
  background-color: var(--red-color-1);
}

.QuestionListMenuItem.selected {
  outline-width: 2px;
  outline-color: var(--secondary-text-color);
  outline-style: solid;
}

.NextQuestionBtn,
.PreviousQuestionBtn {
  background-color: var(--blue-color-1);
  color: #e0e0e0;
  padding: 10px 14px;
  font-size: 14px;
  border-radius: 26px;
  transition: color 150ms ease, background-color 150ms ease;
  white-space: nowrap;
}

.NextQuestionBtn:disabled,
.PreviousQuestionBtn:disabled {
  background-color: var(--footer-btn-disabled-background-color);
  color: var(--footer-btn-disabled-text-color);
  cursor: default;
}

.QuestionNumberIndicatorContainer {
  width: 212px;
  overflow: hidden;
}

.QuestionNumberIndicator {
  padding: 8px 0;
  height: inherit;
  white-space: nowrap;
  transition: transform 300ms ease;
}

.QuestionNumberIndicatorItem {
  width: 32px;
  height: 32px;
  margin: 0 4px;
  color: #e0e0e0;
  display: inline-flex;
  justify-content: center;
  align-items: center;
  background-color: var(--blue-color-2);
  border-radius: 50%;
  opacity: 0.2;
  transition: all 300ms ease;
}

.QuestionNumberIndicatorItem.fake {
  visibility: hidden;
}

.QuestionNumberIndicatorItem.current {
  height: 40px;
  width: 40px;
  opacity: 1;
}

.QuestionNumberIndicatorItem.neighbour {
  width: 36px;
  height: 36px;
  opacity: 0.6;
}

@media screen and (max-width: 600px) {
  .NextQuestionBtnText,
  .PreviousQuestionBtnText {
    display: none;
  }

  .NextQuestionBtn,
  .PreviousQuestionBtn {
    padding: 8px;
  }
}

@media screen and not (max-width: 600px) {
  .NextQuestionBtnIcon,
  .PreviousQuestionBtnIcon {
    display: none;
  }
}

.Main {
  position: relative;
  display: flex;
  flex-direction: row;
  width: 100%;
  min-height: 100vh;
  padding-top: var(--navbar-height);
  z-index: 0;
}

.Sidebar {
  position: fixed;
  display: flex;
  width: var(--sidebar-width);
  height: calc(100vh - var(--navbar-height));
  transition: transform 350ms ease, width 350ms ease;
  z-index: 2;
  border-right: 1px solid var(--box-border-color);
  padding-top: 10px;

  & ul {
    overflow-y: scroll;
    height: 100%;
    z-index: inherit;
  }

  &.hide {
    transform: translateX(calc(var(--sidebar-width) * -1));

    & .SidebarOverlay {
      display: none;
      z-index: -999;
    }
  }

  &::-webkit-scrollbar {
    width: 6px;
  }

  &::-webkit-scrollbar-thumb {
    background: #b1b1b1;
    border-radius: 8px;
  }
}

.SidebarOverlay {
  position: fixed;
  width: 100%;
  height: 100%;
  z-index: 1;

  @media screen and not (max-width: 768px) {
    display: none;
    z-index: -999;
  }
}

.SidebarGroupItem {
  width: 100%;
  padding: 4px 6px 4px 12px;
  box-sizing: border-box;
  list-style: none;

  & > button {
    padding: 12px 10px;
    width: 100%;
    text-align: left;
    box-sizing: border-box;
    display: block;
  }

  & .icon {
    transition: transform 150ms ease;
  }

  &.selected > button {
    background-color: #1e7fee1e;
    color: var(--blue-color-2);
    border-radius: 12px;
  }

  &.selected span::before {
    transform: scaleY(1);
  }

  &.expanded .icon {
    transform: rotate(180deg);
  }
}

.SidebarGroupItemContainer {
  width: 100%;
  display: flex;
  align-items: center;

  & span {
    position: relative;
    width: 100%;
    padding: 0px 0px 0px 8px;
  }

  & span::before {
    position: absolute;
    display: block;
    left: 0;
    transform: scaleY(0);
    height: 100%;
    transition: transform 150ms ease;
    content: "";
    border-left: 2px solid var(--blue-color-2);
  }
}

.SidebarItemsContainer {
  font-size: 15px;

  & ul {
    padding: 8px 10px 0px 10px;
    list-style: none;
  }

  & button {
    text-align: left;
    width: 100%;
    padding: 4px 0px;
  }
}

.SidebarItem.selected {
  color: var(--blue-color-2);
}

.CourseInfo {
  display: flex;
  flex-direction: column;
  width: 100%;
  justify-content: center;
  align-items: center;
  transition: transform 350ms ease, width 350ms ease;

  &.shrink {
    @media screen and not (max-width: 768px) {
      transform: translateX(var(--sidebar-width));
      width: calc(100% - var(--sidebar-width));
    }
  }

  & .CourseInfoTable {
    max-width: 800px;
    width: 100%;
    padding: 12px 8px;
  }

  & table {
    width: 100%;
  }

  & table,
  th,
  td {
    border: 1px solid var(--table-border-color);
    border-collapse: collapse;
  }
}

.CourseInfoTableHeader * {
  text-transform: uppercase;
  font-size: 15px;
  font-weight: 700;
  padding: 10px;
}

.CourseInfoTableRow {
  & th {
    font-size: 14px;
    padding: 10px;
    font-weight: 500;
    text-align: right;
  }

  & td {
    font-size: 14px;
    padding: 10px;
    text-align: left;
  }

  &:has(.BtnDoTest) th {
    text-align: center;
  }
}

.BtnDoTest {
  padding: 0px;
  width: 200px;
  height: 40px;
  color: #e0e0e0;
  background: var(--blue-color-1);
  border-radius: 4px;
}

.icon {
  vertical-align: middle;
  margin: 6px;
}

.TestContainer {
  margin-left: auto;
  margin-right: auto;
  width: var(--test-container-width);
  padding-bottom: var(--footer-height);
}

.RadioQuestion,
.CheckboxQuestion {
  display: flex;
  flex-direction: column;
  font-size: 16px;
  margin: 32px 20px;
  padding: 16px;
  border-radius: 8px;
  border: 2px solid var(--box-border-color);
  min-height: 360px;

  & .QuestionContainerDirection {
    padding: 20px;
    min-height: 140px;
    background-color: var(--question-direction-background-color);
    border-radius: 8px;
    position: relative;
    transition: color 150ms ease, background-color 150ms ease;

    & .QuestionContainerContent {
      color: inherit !important;
      background-color: inherit !important;
    }
  }

  & .QuestionContainerHeader {
    display: flex;
    flex-wrap: wrap;
    justify-content: space-between;
    padding: 6px 0;
    font-weight: 700;
    column-gap: 32px;
  }

  & .QuestionNoAnswerMessage {
    font-size: 14px;
    color: var(--red-color-1);
  }

  &.noAnswer .QuestionContainerNumber {
    color: var(--red-color-1);
  }

  & .QuestionContainerDirection::after {
    position: absolute;
    bottom: -16px;
    transform: translateX(-50%);
    left: 50%;
    width: 95%;
    content: "";
    display: block;
    clear: both;
    border-bottom: 2px solid var(--box-border-color);
  }

  @media screen and (max-width: 768px) {
    margin-left: 8px;
    margin-right: 8px;
    padding: 12px;
  }
}

.TestContainerPaginated .RadioQuestion,
.CheckboxQuestion {
  border: none;
}

.AnswerOptions {
  display: flex;
  flex-wrap: wrap;
  margin-top: auto;
  padding: 20px;
  padding-top: 40px;

  @media screen and (max-width: 768px) {
    padding-left: 4px;
    padding-right: 4px;
  }
}

.RadioAnswerOption,
.CheckboxAnswerOption {
  display: flex;
  flex-basis: 50%;
  align-items: start;
  padding: 10px 24px 10px 0px;
  gap: 8px;

  & label {
    display: flex;
    align-items: start;
    padding: 20px;
    width: 100%;
    height: 100%;
    cursor: pointer;
    border-radius: 6px;
    border: 1px solid var(--answer-border-color);
    transition: border-color 300ms ease;
    gap: 16px;
  }

  .AnswerOptionBullet {
    font-weight: 700;
    margin: 22px 12px auto;
  }

  .AnswerOptionText {
    font-size: 15px;

    & span {
      color: inherit !important;
      background-color: inherit !important;
    }
  }

  @media screen and (max-width: 900px) {
    & {
      flex-basis: 100%;
      padding-right: 8px;
    }

    .AnswerOptionBullet {
      margin-left: 6px;
      margin-right: 6px;
    }

    & label {
      padding: 20px 12px;
      gap: 12px;
    }
  }

  & label:has(input:checked) {
    border-color: #1c76da;
  }

  &.correct label {
    border-color: var(--green-color-2) !important;
    border-width: 3px;
    margin: -2px;
  }

  &.incorrect label {
    border-color: var(--red-color-1) !important;
    border-width: 3px;
    margin: -2px;
  }

  &.unanswer label {
    border-color: var(--yellow-color) !important;
    border-width: 3px;
    margin: -2px;
  }
}

.TestResultPopup {
  width: 100%;
  height: 100%;
  position: fixed;
  align-content: center;
  background-color: #2e2e2e52;
  transition: opacity 300ms ease;

  & .TestResultBox {
    position: relative;
    width: 90%;
    max-width: 580px;
    padding: 10px;
    background-color: var(--background-color);
    margin-left: auto;
    margin-right: auto;
    border-radius: 10px;
    border: 2px solid var(--box-border-color);
    text-align: center;

    h1 {
      margin: 20px 0;
      padding: 0 40px;
      display: inline-block;
      text-transform: uppercase;
      color: var(--blue-color-1);
      border-bottom: 2px solid var(--box-border-color);
    }

    button {
      width: 80%;
      max-width: 200px;
      height: 40px;
      margin: 24px;
      color: #e0e0e0;
      background-color: var(--blue-color-1);
      border-radius: 4px;
    }

    p {
      margin: 16px;
      font-size: 18px;
      color: var(--green-color-1);
    }

    &.mediumScore p {
      color: var(--yellow-color);
    }

    &.lowScore p {
      color: var(--red-color-1);
    }
  }
}

.TestResultPopup.hide {
  height: 0;
  opacity: 0;
  transition: height 0s ease 300ms, opacity 300ms ease;
}

.LoadingView {
  display: flex;
  width: 100%;
  height: 100%;
  align-items: center;
  justify-content: center;
}

img {
  width: 100%;
  height: auto;
  object-fit: cover;
}
